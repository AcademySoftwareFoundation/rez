#!/bin/bash
# Dr. D Studios R&D
# Author : nicholas.yue@drdstudios.com
# and: allan.johns@drdstudios.com (added rez integration)
# Created : 25/March/2009
#
# Usage:
# rez-cmake [ rez-cmake args ] [ --- cmake args ]
#
# options:
#
# -t: set build type, one of: Debug, Release [default: Release]
#
# -o: turn on coverage profiling [default: off]
#
# -p: set build platform
#
# -c: install centrally [default: off]
#
# -r: retain cmake cache [default: off]
#
# -d: set build directory
#
# -n: nop, ie do not run cmake. For debugging purposes only
#

# Defaults
build_system=eclipse
build_target=Release
build_platform=lin64
build_directory=.
coverage=0

retain_cache=0 # i.e. remove by default

cmake_arguments=" -DCMAKE_SKIP_RPATH=1 "


# separate out pass-through cmake args, if present
rezcmakeargs=
cmakeargs=
atfirst=1

for arg in $* ; do
	if [ "$arg" == "---" ]; then
		atfirst=0
	else
		if [ $atfirst -eq 1 ]; then
			rezcmakeargs="$rezcmakeargs "$arg
		else
			cmakeargs="$cmakeargs "$arg
		fi
	fi
done


# Check arguments
while getopts "p:t:b:rd:ncoa" OPTIONS $rezcmakeargs ;
do
    case $OPTIONS in
	b)
	    build_system=$OPTARG
	    ;;
	t)
	    build_target=$OPTARG
	    ;;
	o)	coverage=1
		;;
	p)
	    build_platform=$OPTARG
	    ;;
	d)
	    build_directory=$OPTARG
	    ;;
	r)
	    retain_cache=1
	    ;;
	c)
		if [ "$REZ_IN_REZ_RELEASE" != "1" ]; then
			read -p "You are attempting to install centrally outside of rez-release: do you really want to do this (y/n)? "
			if [ "$REPLY" != "y" ]; then
				exit 1
			fi
		fi
		cmake_arguments=" -DCENTRAL=1 "$cmake_arguments
		;;
	n)
	    exit 0
	    ;;
    esac
done

# Do we delete the cache
if [ "$retain_cache" = 0 ]; then
    rm -f CMakeCache.txt
fi

case $build_target in
    Debug)
	cmake_arguments=" -DCMAKE_BUILD_TYPE=Debug "$cmake_arguments
	;;
    Release)
	cmake_arguments=" -DCMAKE_BUILD_TYPE=Release "$cmake_arguments
	;;
esac

if [ $coverage -eq 1 ]; then
	cmake_arguments=" -DCOVERAGE=1 "$cmake_arguments
fi

# Add pass-through cmake arguments
cmake_arguments=$cmakeargs" "$cmake_arguments

# Rez custom module location
cmake_arguments=" -DCMAKE_MODULE_PATH=$CMAKE_MODULE_PATH "$cmake_arguments

# Fetch the initial cache if it's defined
if [ "$CMAKE_INITIAL_CACHE" != "" ]; then
	cmake_arguments=" -C $CMAKE_INITIAL_CACHE "$cmake_arguments
fi

# Append build directory [must be last append before command generation]
cmake_arguments=$cmake_arguments" "$build_directory

echo "rez-cmake: calling cmake with the following arguments: "$cmake_arguments

case $build_system in
    eclipse)
	cmake -G "Eclipse CDT4 - Unix Makefiles" $cmake_arguments
	if [ $? -ne 0 ]; then
		exit 1
	fi
	;;
    codeblocks)
	cmake -G "CodeBlocks - Unix Makefiles" $cmake_arguments
	if [ $? -ne 0 ]; then
		exit 1
	fi
	;;
    make)
	cmake -G "Unix Makefiles" $cmake_arguments
	if [ $? -ne 0 ]; then
		exit 1
	fi
	;;
    xcode)
	if [ "$build_platform" = "xcode" ]; then
	    cmake -G "Xcode" $cmake_arguments
	    if [ $? -ne 0 ]; then
		    exit 1
	    fi
	else
	    echo "Generation of Xcode project only available on the osx platform"
	    exit 1
	fi
	;;
esac

exit 0


#    Copyright 2008-2012 Dr D Studios Pty Limited (ACN 127 184 954) (Dr. D Studios)
#
#    This file is part of Rez.
#
#    Rez is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Lesser General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Rez is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public License
#    along with Rez.  If not, see <http://www.gnu.org/licenses/>.
